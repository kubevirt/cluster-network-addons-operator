---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-cni-linux-bridge-plugin
  namespace: {{ .Namespace }}
  labels:
    tier: node
    app: cni-linux-bridge-plugin
spec:
  selector:
    matchLabels:
      name: kube-cni-linux-bridge-plugin
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  template:
    metadata:
      labels:
        name: kube-cni-linux-bridge-plugin
        tier: node
        app: cni-plugins
      annotations:
        description: LinuxBridge installs 'bridge' CNI on cluster nodes, so it can be later used to attach Pods/VMs to Linux bridges
    spec:
{{ if .EnableSCC }}
      serviceAccountName: linux-bridge
{{ end }}
      affinity: {{ toYaml .Placement.Affinity | nindent 8 }}
      nodeSelector: {{ toYaml .Placement.NodeSelector | nindent 8 }}
      tolerations: {{ toYaml .Placement.Tolerations | nindent 8 }}
      priorityClassName: system-cluster-critical
      containers:
        - name: cni-plugins
          image: {{ .LinuxBridgeImage }}
          imagePullPolicy: {{ .ImagePullPolicy }}
          command:
            - /bin/bash
            - -ce
            - |
              cni_mount_dir=/opt/cni/bin
              components=("bridge" "tuning")
              for component in "${components[@]}"; do
                if find "${cni_mount_dir}/${component}" &>/dev/null && ! test -L "${cni_mount_dir}/${component}"; then
                  echo "${component} binary found, creating symbolic link ${cni_mount_dir}/cnv-${component}"
                  ln -sf "${cni_mount_dir}/${component}" "${cni_mount_dir}/cnv-${component}"
                else
                  echo "installing cnv-${component}, and creating symbolic link ${cni_mount_dir}/${component}"

                  sourcebinpath="/usr/src/github.com/containernetworking/plugins/bin"
                  cp --remove-destination "${sourcebinpath}/${component}" "${cni_mount_dir}/cnv-${component}"

                  printf -v component_checksum "%s" "$(<${sourcebinpath}/${component}.checksum)"
                  printf "%s %s" "${component_checksum% *}" "${cni_mount_dir}/cnv-${component}" | sha256sum --check

                  ln -sf "${cni_mount_dir}/cnv-${component}" "${cni_mount_dir}/${component}"
                fi
              done
              echo 'Entering sleep... (success)'
              sleep infinity
          resources:
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cnibin
              mountPath: /opt/cni/bin
      volumes:
        - name: cnibin
          hostPath:
            path: {{ .CNIBinDir }}
