---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Namespace }}
---
apiVersion: v1
data:
  DOMAIN: {{ .Domain }}
  NAME_SERVER_IP: {{ .NameServerIp }}
  Corefile: |
    .:5353 {
        auto {
          directory /zones db\.(.*) {1}
          reload 45s
        }
        reload
        log
        health :8082
        ready :8083
    }
kind: ConfigMap
metadata:
  name: secondary-dns
  namespace: {{ .Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secondary
rules:
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachineinstances
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secondary
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secondary
subjects:
  - kind: ServiceAccount
    name: secondary
    namespace: {{ .Namespace }}
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: secondary
  namespace: {{ .Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: secondary-dns
  name: secondary-dns
  namespace: {{ .Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: secondary-dns
  template:
    metadata:
      labels:
        k8s-app: secondary-dns
      annotations:
        kubectl.kubernetes.io/default-container: status-monitor
        openshift.io/required-scc: "restricted-v2"
    spec:
      serviceAccountName: secondary
      securityContext:
        runAsUser: {{ .RunAsUser }}
        runAsNonRoot: {{ .RunAsNonRoot }}
        seccompProfile:
          type: "RuntimeDefault"
      containers:
        - args:
            - -conf
            - /etc/coredns/Corefile
          image: {{ .CoreDNSImage }}
          imagePullPolicy: {{ .ImagePullPolicy }}
          name: secondary-dns
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          ports:
            - containerPort: 5353
              name: dns
              protocol: UDP
            - containerPort: 8082
              name: healthport
              protocol: TCP
            - containerPort: 8083
              name: readyport
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/coredns
              readOnly: true
            - name: secdns-zones
              mountPath: /zones
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
          readinessProbe:
            httpGet:
              path: /ready
              port: readyport
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: healthport
            initialDelaySeconds: 15
            periodSeconds: 20
        - name: status-monitor
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          image: {{ .KubeSecondaryDNSImage }}
          resources:
            requests:
              cpu: 100m
              memory: 70Mi
          ports:
            - containerPort: 8081
              name: healthport
              protocol: TCP
          volumeMounts:
            - name: secdns-zones
              mountPath: /zones
          env:
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  name: secondary-dns
                  key: DOMAIN
            - name: NAME_SERVER_IP
              valueFrom:
                configMapKeyRef:
                  name: secondary-dns
                  key: NAME_SERVER_IP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthport
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthport
            initialDelaySeconds: 15
            periodSeconds: 20
          terminationMessagePolicy: FallbackToLogsOnError
          imagePullPolicy: {{ .ImagePullPolicy }}
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 1
      volumes:
        - name: config-volume
          configMap:
            defaultMode: 420
            items:
              - key: Corefile
                path: Corefile
            name: secondary-dns
        - name: secdns-zones
          emptyDir: {}
      nodeSelector: {{ toYaml .Placement.NodeSelector | nindent 8 }}
      affinity: {{ toYaml .Placement.Affinity | nindent 8 }}
      tolerations: {{ toYaml .Placement.Tolerations | nindent 8 }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-ingress-to-secondary-dns
  namespace: '{{ .Namespace }}'
spec:
  podSelector:
    matchLabels:
      k8s-app: secondary-dns
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - protocol: UDP
          port: dns
