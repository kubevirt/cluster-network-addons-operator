apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: mac-controller-manager
  name: {{ .Namespace }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kubemacpool-mutator
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kubemacpool-service
      namespace: {{ .Namespace }}
      path: /mutate-pods
  failurePolicy: Fail
  name: mutatepods.kubemacpool.io
  namespaceSelector:
    matchExpressions:
    - key: runlevel
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: openshift.io/run-level
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: mutatepods.kubemacpool.io
      operator: In
      values:
      - allocate
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: NoneOnDryRun
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: kubemacpool-service
      namespace: {{ .Namespace }}
      path: /mutate-virtualmachines
  failurePolicy: Fail
  name: mutatevirtualmachines.kubemacpool.io
  namespaceSelector:
    matchExpressions:
    - key: runlevel
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: openshift.io/run-level
      operator: NotIn
      values:
      - "0"
      - "1"
    - key: mutatevirtualmachines.kubemacpool.io
      operator: NotIn
      values:
      - ignore
  rules:
  - apiGroups:
    - kubevirt.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - virtualmachines
  sideEffects: NoneOnDryRun
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubemacpool-manager-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - create
  - update
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - update
  - patch
  - list
  - watch
- apiGroups:
  - kubevirt.io
  resources:
  - virtualmachines
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: kubemacpool-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubemacpool-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: '{{ .Namespace }}'
---
apiVersion: v1
data:
  RANGE_END: {{ .RangeEnd }}
  RANGE_START: {{ .RangeStart }}
kind: ConfigMap
metadata:
  labels:
    control-plane: mac-controller-manager
    controller-tools.k8s.io: "1.0"
  name: kubemacpool-mac-range-config
  namespace: '{{ .Namespace }}'
---
apiVersion: v1
kind: Service
metadata:
  name: kubemacpool-service
  namespace: '{{ .Namespace }}'
spec:
  ports:
  - port: 443
    targetPort: 8000
  publishNotReadyAddresses: true
  selector:
    control-plane: mac-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: cert-manager
    controller-tools.k8s.io: "1.0"
  name: kubemacpool-cert-manager
  namespace: '{{ .Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: cert-manager
      controller-tools.k8s.io: "1.0"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kubemacpool
        control-plane: cert-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --v=production
        command:
        - /manager
        env:
        - name: RUN_CERT_MANAGER
          value: ""
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: COMPONENT
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/component']
        - name: PART_OF
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/part-of']
        - name: VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        - name: MANAGED_BY
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/managed-by']
        - name: CA_ROTATE_INTERVAL
          value: '{{ .CARotateInterval | default "8760h0m0s" }}'
        - name: CA_OVERLAP_INTERVAL
          value: '{{ .CAOverlapInterval | default "24h0m0s" }}'
        - name: CERT_ROTATE_INTERVAL
          value: '{{ .CertRotateInterval | default "4380h0m0s" }}'
        - name: CERT_OVERLAP_INTERVAL
          value: '{{ .CertOverlapInterval | default "24h0m0s" }}'
        image: '{{ .KubeMacPoolImage }}'
        imagePullPolicy: '{{ .ImagePullPolicy }}'
        name: manager
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: mac-controller-manager
    controller-tools.k8s.io: "1.0"
  name: kubemacpool-mac-controller-manager
  namespace: '{{ .Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: mac-controller-manager
      controller-tools.k8s.io: "1.0"
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        description: KubeMacPool manages MAC allocation to Pods and VMs
      labels:
        app: kubemacpool
        control-plane: mac-controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      affinity: {{ toYaml .Placement.Affinity | nindent 8 }}
      containers:
      - args:
        - --v=production
        - --wait-time=300
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: RANGE_START
          valueFrom:
            configMapKeyRef:
              key: RANGE_START
              name: kubemacpool-mac-range-config
        - name: RANGE_END
          valueFrom:
            configMapKeyRef:
              key: RANGE_END
              name: kubemacpool-mac-range-config
        - name: KUBEVIRT_CLIENT_GO_SCHEME_REGISTRATION_VERSION
          value: v1
        image: '{{ .KubeMacPoolImage }}'
        imagePullPolicy: '{{ .ImagePullPolicy }}'
        name: manager
        ports:
        - containerPort: 8000
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Content-Type
              value: application/json
            path: /readyz
            port: webhook-server
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs/
          name: tls-key-pair
          readOnly: true
      nodeSelector: {{ toYaml .Placement.NodeSelector | nindent 8 }}
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 5
      tolerations: {{ toYaml .Placement.Tolerations | nindent 8 }}
      volumes:
      - name: tls-key-pair
        secret:
          secretName: kubemacpool-service
